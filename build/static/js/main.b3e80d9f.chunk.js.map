{"version":3,"sources":["logoChinook2.svg","Components/NavBar/NavBar.jsx","Components/SideList/SideList.jsx","Components/OneHeli/OneHeli.jsx","Components/Main.jsx","Pages/About.jsx","Pages/Contact.jsx","Components/StoryMode/StoryMode.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","to","src","logo","alt","activeClassName","isActive","match","location","pathname","SideList","heliList","this","props","map","aircraft","model_name","key","id","image","manufacturer_code","React","Component","withRouter","singleAircraft","image2","model_no","overview","length","wingspan","height","power","max_speed","range","aircraft_use","crew","Main","state","data","mainAircraft","axios","get","then","res","setState","catch","console","error","prevProps","params","modelname","classname","About","Contact","contactPage","name","email","placeholder","onChange","handleChange","onClick","handleSubmit","extend","OrbitControls","cors","StoryMode","start","frameId","requestAnimationFrame","animate","renderScene","window","renderer","render","scene","camera","heliImage","CameraControls","useThree","domElement","gl","controls","useRef","useFrame","current","update","ref","args","autoRotate","enableZoom","width","mount","clientWidth","clientHeight","THREE","antialias","setSize","appendChild","innerWidth","innerHeight","position","z","x","light","set","add","addModel","OBJLoader","load","object","scale","texture","CubeTextureLoader","background","cubeRenderTarget","WebGLCubeRenderTarget","format","RGBFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","cubeCamera","CubeCamera","visible","rotation","castShadow","attach","envMap","renderTarget","color","roughness","metalness","style","App","path","component","routeProps","Home","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b3e80d9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoChinook2.694dd377.svg\";","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport './NavBar.scss';\nimport logo from '../../logoChinook2.svg';\n\nexport default function NavBar() {\n    return (\n        <div>\n            <header className=\"header\">\n            <div className='header__logo'>\n            <NavLink to='/Chinook' className=\"HeliLogo\">\n            <img src={logo} alt='Heli-Info Logo' className='header__logoImage'/>\n            </NavLink>\n            </div>\n            \n            <div className=\"header__rightSide\">\n            <NavLink to='/About' activeClassName=\"header__active\">\n            <button className=\"header__About\">About</button>\n            </NavLink>\n            <NavLink to='/Contact' activeClassName=\"header__active\">\n            <button className=\"header__Contact\">Contact</button>\n            </NavLink>\n            <NavLink to='/Chinook' activeClassName=\"header__active\"\n\n            isActive={(match, location)=>{\n                if(!match || !location.pathname === \"/\"){\n                    return false;\n                }if(location.pathname === \"/\" || location.pathname === `/Chinook` || location.pathname === `/Cyclone` || location.pathname === `/Griffon` || location.pathname === `/Cormorant` || location.pathname === `/JetRanger`){return true;}\n            }}\n            >\n\n\n            <button className=\"header__Home\" >Home</button>\n            </NavLink>\n            <NavLink to='/Storymode' activeClassName=\"header__active\">\n            <button className=\"header__StoryMode\" >StoryMode</button>\n            </NavLink>\n            </div>\n            </header>\n        </div>\n    )\n}\n","import React from 'react';\nimport './SideList.scss';\nimport {Link, withRouter} from 'react-router-dom';\n\nclass SideList extends React.Component {\n    render(){\n        let heliList = this.props.heliList\n    return (\n        <div className=\"SideList\">\n           {heliList.map(aircraft=>{return(\n               <Link to={`/${aircraft.model_name}`}>\n                   <li className='SideList__card' key={aircraft.id}>\n                       <img className='SideList__image'src={aircraft.image} alt=\"\"/>\n                       <div>\n                           <div className='SideList__make'>{aircraft.manufacturer_code}</div>\n                           <div className='SideList__model'>{aircraft.model_name}</div>\n                       </div>\n\n                   </li>\n               </Link>\n           )})}\n\n        </div>\n    )}\n}\nexport default withRouter(SideList);","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport './OneHeli.scss';\n\nfunction OneHeli({singleAircraft}) {\n    return (\n        <div className='OneHeli'>\n            <img className='OneHeli__image' src={singleAircraft.image2} alt=\"\"/>\n            <h5 className='OneHeli__make'>Manufacture: {singleAircraft.manufacturer_code}</h5>\n            <div className='OneHeli__modelNumber'>Model number: {singleAircraft.model_no}</div>\n            <div className='OneHeli__modelName'>Model name: {singleAircraft.model_name}</div>\n            <p className='OneHeli__overview'>{singleAircraft.overview}</p>\n            <div className='OneHeli__specContainer'>\n            <div className=\"OneHeli__length\"><span className='OneHeli__specHeading'>Length:</span> {singleAircraft.length}</div>\n            <div className=\"OneHeli__wingspan\"><span className='OneHeli__specHeading'>Rotor span:</span> {singleAircraft.wingspan}</div>\n            <div className=\"OneHeli__height\"><span className='OneHeli__specHeading'>Height:</span> {singleAircraft.height}</div>\n            <div className=\"OneHeli__power\"><span className='OneHeli__specHeading'>Powerplant:</span> {singleAircraft.power}</div>\n            <div className=\"OneHeli__maxSpeed\"><span className='OneHeli__specHeading'>Max speed: </span> {singleAircraft.max_speed}</div>\n            <div className=\"OneHeli__range\"><span className='OneHeli__specHeading'>Range:</span> {singleAircraft.range}</div>\n            <div className=\"OneHeli__aircraftUse\"><span className='OneHeli__specHeading'>Aircraft use:</span> {singleAircraft.aircraft_use}</div>\n            <div className=\"OneHeli__crew\"><span className='OneHeli__specHeading'>Crew:</span> {singleAircraft.crew}</div>\n            <div className=\"OneHeli__notice\">*Notice: The contents listed on this page is intended for educational and informative purposes only, and was originally created for a school project. Information and pictures are from Canada's Department of National Defence.*</div>\n            </div>\n        </div>\n\n    )\n}\nexport default withRouter(OneHeli);","import React from 'react';\nimport axios from 'axios';\nimport NavBar from './NavBar/NavBar';\nimport { withRouter } from 'react-router-dom';\nimport './Main.scss';\nimport SideList from './SideList/SideList';\nimport OneHeli from './OneHeli/OneHeli';\n\nclass Main extends React.Component {\n    state = {\n        data: [],\n        mainAircraft: {},\n    }\n    async componentDidMount(props){\n        axios.get('http://localhost:8080/list')\n        .then(res=>{this.setState({data: res.data})})\n        .catch(console.error(\"An error occured with the list.\"))\n\n        axios.get('http://localhost:8080/Chinook')\n        .then(res=>{this.setState({mainAircraft: res.data})})\n    }\n    componentDidUpdate(prevProps){\n        if(this.props.match.params !== prevProps.match.params){\n            axios.get(`http://localhost:8080/${this.props.match.params.modelname}`)\n            .then(res=>{this.setState({mainAircraft: res.data})})\n            .catch(console.error())\n        }\n    }\n\n    render(props) {\n    return (\n        <div>\n            <NavBar/>\n            <SideList heliList={this.state.data} classname=\"SideList\"/>\n            <OneHeli  singleAircraft={this.state.mainAircraft}/>\n        </div>\n    )}\n}\nexport default withRouter(Main);","import React from 'react';\nimport NavBar from '../Components/NavBar/NavBar';\nimport '../styles/AboutPage.scss';\n\nexport default function About() {\n    return (\n        <div >\n            <NavBar/>\n            <div className='about'>\n            <h1>About Us</h1>\n            <div className='about__us'>\n            <p>\n                The original intent of this is to help share and spread information about Aviation Helicopters and saying Thank-You to those that serve and have served.</p>\n\n                <p> Thank you for the sacrifices that you and your family have made. </p>\n\n                <p>We believe that there could be more appreciation for those that serve and have served; therefore, please consider our Veterans if you are looking into volunteering or donating.</p>\n\n                <p>This project started with Canadian Military Helicopters, and we would like to slowly grow and add more Military Aircraft and Equipment to the website. It is dependant on a lot of factors so please bear with us if adding new content is slow.</p>\n\n                <p>Also, we are a small team, so please be patient with us if you do not see the aircraft you are looking for.</p>\n\n                <p>Our goal is to eventually have all NATO military equipment listed on our website.</p>\n\n                <p>There have been unforeseen difficulties in collecting appropriate information and content as to not break any copyright laws, so please be patient if you do not see any new equipment on here.</p>\n\n                <p>If you would like to see your favorite Aircraft listed on our website. Feel free to use the Contact page and let us know. And if you have a favorite picture, that you own, and would like to have it on our website please kindly reach out to us and we'll see what can be done.</p>\n            </div>\n            </div>\n        </div>\n    )\n}\n","import React, {Component} from 'react'\nimport NavBar from '../Components/NavBar/NavBar';\nimport '../styles/ContactPage.scss';\n\nexport default class Contact extends Component {\n    constructor(){\n        super();\n        this.state = { \n            contactPage: '', \n            name: 'Name', \n            email: 'email@example.com'\n        };\n    }\n\n    render(){\n    return (\n        <div>\n        <NavBar/>\n            <div className=\"contact\">\n            <h1>Contact Us</h1>\n            <p className=\"contact__usPage\">Don't see the aircraft you're looking for, or have a picture that you've taken and want to share? Feel free to reach out about us and what we are trying to do; and, we'll see what we can do.</p>\n             <div className=\"contact__usPageImage\">?... hello?...</div>\n            <form className=\"contact__form\">\n                <div className=\"contact__nameContainer\">\n                <label>Name: </label>\n                <input className=\"contact__nameInput\" placeholder=\"Name\"></input>\n                </div>\n                <div className=\"contact__emailContainer\">\n                <label >E-mail: </label>\n                <input className=\"contact__emailInput\" placeholder=\"E-mail\"></input>\n                </div>\n                <div className=\"contact__messageContainer\">\n                <label className=\"contact__messageLabel\">Message: </label>\n                <textarea className=\"contact__messageInput\" onChange={this.handleChange} placeholder=\"Message\"></textarea>\n                </div>\n                <button className=\"contact__submitButton\" onClick={this.handleSubmit}>SUBMIT</button>\n            </form>\n             </div>\n        </div>\n    )\n}\n}\n","import React, {useRef} from 'react';\nimport * as THREE from \"three\";\nimport { CubeTextureLoader, Sphere } from \"three\";\nimport { MTLLoader,  OBJLoader } from \"three-obj-mtl-loader\";\nimport {useThree, Canvas, extend, useFrame} from \"react-three-fiber\";\nimport {CubeCamera, WebGLCubeRenderTarget, RGBFormat, LinearMipmapLinearFilter} from \"three\";\nimport OrbitControls from \"three-orbitcontrols\";\nimport NavBar from '../NavBar/NavBar';\nimport './StoryMode.scss';\nimport cors from \"cors\";\n\nextend({ OrbitControls });\n\ncors();\n\nclass StoryMode extends React.Component{\n    componentDidMount(){\n      //Scene\n      const width = this.mount.clientWidth;\n      const height = this.mount.clientHeight;\n      this.scene = new THREE.Scene();\n\n      //Render\n      this.renderer = new THREE.WebGLRenderer({antialias: true});\n      this.renderer.setSize(width, height);\n      this.mount.appendChild(this.renderer.domElement);\n\n      //Camera\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight,\n        0.1,\n        1000\n        );\n        this.camera.position.z = 1;\n        this.camera.position.x = 1;\n        // this.camera.position.y = -10;\n\n        //Controls\n        const controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n        ///\n        ///\n        //SkyBox\n\n        // let skyBoxArray = [];\n\n        // let skyImg1 = new THREE.TextureLoader().load('./skybox-mainFront.png');\n        // let skyImg2 = new THREE.TextureLoader().load('./skybox-back.png');\n        // let skyImg3 = new THREE.TextureLoader().load('./skybox-ceiling.png');\n        // let skyImg4 = new THREE.TextureLoader().load('./skybox-floor.png');\n        // let skyImg5 = new THREE.TextureLoader().load('./skybox-sideRight.png');\n        // let skyImg6 = new THREE.TextureLoader().load('./skybox-sideLeft.png');\n\n        // skyBoxArray.push(new THREE.MeshBasicMaterial({map: skyImg1}));\n        // skyBoxArray.push(new THREE.MeshBasicMaterial({map: skyImg2}));\n        // skyBoxArray.push(new THREE.MeshBasicMaterial({map: skyImg3}));\n        // skyBoxArray.push(new THREE.MeshBasicMaterial({map: skyImg4}));\n        // skyBoxArray.push(new THREE.MeshBasicMaterial({map: skyImg5}));\n        // skyBoxArray.push(new THREE.MeshBasicMaterial({map: skyImg6}));\n\n        // let skyBoxGeometry = new THREE.BoxBufferGeometry(10000,10000,10000);\n        // let skyBoxBox = new THREE.Mesh(skyBoxGeometry, skyBoxArray);\n        // this.scene.add( skyBoxBox );\n        // this.animate();\n\n        // const loader = new THREE.CubeTextureLoader();\n        // const texture = loader.load([\n        //   './skybox-mainFront.png',\n        //   './skybox-back.png',\n        //   './skybox-ceiling.png',\n        //   './skybox-floor.png',\n        //   './skybox-sideRight.png',\n        //   './skybox-sideLeft.png',\n        // ])\n        // this.scene.background = texture;\n     \n\n\n        ///\n        ///\n        ///\n\n        \n\n        //Lighting\n        var light = []\n        light[0]=new THREE.PointLight(0xffffff, 1, 0);\n        light[1]=new THREE.PointLight(0xffffff, 1, 0);\n        light[2]=new THREE.PointLight(0xffffff, 1, 0);\n        light[3]=new THREE.PointLight(0xffffff, 1, 0);\n        light[4]=new THREE.PointLight(0xffffff, 1, 0);\n        light[5]=new THREE.PointLight(0xffffff, 1, 0);\n        light[0].position.set(50,50,50);\n        light[1].position.set(0,50,0);\n        light[2].position.set(0,0,50);\n        light[3].position.set(50,0,0);\n        light[4].position.set(-50,-50,0);\n        light[5].position.set(50,50,0);\n        // this.scene.add(light[0]);\n        // this.scene.add(light[1]);\n        // this.scene.add(light[2]);\n        // this.scene.add(light[3]);\n        this.scene.add(light[4]);\n        this.scene.add(light[5]);\n\n\n        this.addModel();\n        \n        this.start();\n    }\n\n    \n\n    addModel(){\n      let objLoader = new OBJLoader();\n        objLoader.load(\"./assets/model_obj_f3W-vzmHRgW_4EeRj7QNREa/model.obj\",\n        object=>{\n        this.aircraft=object;\n        this.aircraft.scale.set(1.5,1.5,1.5);\n        this.scene.add(this.aircraft);\n      }\n      )\n    }\n\n    start=()=>{\n      if(!this.frameId){\n        this.frameId=requestAnimationFrame(this.animate);\n      }\n    };\n    animate=()=>{\n      this.renderScene();\n      this.frameId=window.requestAnimationFrame(this.animate);\n    };\n    renderScene=()=>{\n      if(this.renderer){\n        this.renderer.render(this.scene, this.camera);\n      }\n      \n    }\n\nheliImage = ()=>{\n}\n\n//Trying out react-three-fiber and seeing if the desired result can be achieved.\nCameraControls = () => {\n  // Get a reference to the Three.js Camera, and the canvas html element.\n  // We need these to setup the OrbitControls class.\n  // https://threejs.org/docs/#examples/en/controls/OrbitControls\n\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  // Ref to the controls, so that we can update them on every frame with useFrame\n  const controls = useRef();\n  useFrame(() => controls.current.update());\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, domElement]}\n      autoRotate={true}\n      enableZoom={false}\n    />\n  );\n};\n\nSkyBox() {\n  const { scene } = useThree();\n  const loader = new CubeTextureLoader();\n  // The CubeTextureLoader load method takes an array of urls representing all 6 sides of the cube.\n  const texture = loader.load([\n    \"https://6izyu.csb.app/4b.jpg\",\n    \"https://6izyu.csb.app/3.jpg\",\n    \"https://6izyu.csb.app/4b.jpg\",\n    \"https://6izyu.csb.app/4.jpg\",\n    \"https://6izyu.csb.app/5.jpg\",\n    \"https://6izyu.csb.app/2.jpg\",\n          // './skybox-back.png',\n          // './skybox-ceiling.png',\n          // './skybox-floor.png',\n          // './skybox-sideRight.png',\n          // './skybox-sideLeft.png',\n  ]);\n  // Set the scene background property to the resulting texture.\n  scene.background = texture;\n  return null;\n}\n\nSphere() {\n  const { scene, gl } = useThree();\n  // The cubeRenderTarget is used to generate a texture for the reflective sphere.\n  // It must be updated on each frame in order to track camera movement and other changes.\n  const cubeRenderTarget = new WebGLCubeRenderTarget(256, {\n    format: RGBFormat,\n    generateMipmaps: true,\n    minFilter: LinearMipmapLinearFilter,\n  });\n  const cubeCamera = new CubeCamera(1, 1000, cubeRenderTarget);\n  cubeCamera.position.set(0, 100, 0);\n  scene.add(cubeCamera);\n  // Update the cubeCamera with current renderer and scene.\n  useFrame(() => cubeCamera.update(gl, scene));\n  return (\n    <mesh visible position={[0, 0, 0]} rotation={[0, 0, 0]} castShadow>\n      <sphereGeometry attach=\"geometry\" args={[2, 32, 32]} />\n      <meshBasicMaterial\n        attach=\"material\"\n        envMap={cubeCamera.renderTarget.texture}\n        color=\"white\"\n        roughness={0.1}\n        metalness={1}\n      />\n    </mesh>\n  );\n}\n\n\n\n    render(){\n    return (\n        <div className=\"StoryMode\">\n            <NavBar/>\n            <h3>StoryMode</h3>\n            {/* <Canvas>\n              <this.CameraControls/>\n              <this.Sphere/>\n              <this.SkyBox/>\n              </Canvas> */}\n            <div className=\"skyBox1\" style={{width: \"700px\", height: \"700px\"}}\n            ref={mount => {this.mount=mount}}/>\n\n           <div className=\"HeliModel\">\n            <h3 className=\"section__left\">Helicopter Model No and Name: AH-64 Apache</h3>\n            <h3 className=\"section__left\">Manufacturer: Boeing</h3>\n            <h5 className=\"section__left\">The flying Tank.</h5>\n            <div className=\"section__right\">\n                <h5>It can fly upside down.</h5>\n           </div>\n           <div className=\"HeliModel__notice\">*Thank you to Michał Perzak for the Combat Heli 3D model (Poly Google)*.</div>\n            </div>\n\n        </div>\n    )\n}\n}\nexport default StoryMode;","import React from 'react';\nimport Main from './Components/Main'\nimport './App.css';\nimport './styles/styles.scss';\nimport { BrowserRouter, Route, Switch, } from \"react-router-dom\";\nimport Home from './Components/Main';\nimport About from './Pages/About';\nimport Contact from './Pages/Contact';\nimport StoryMode from './Components/StoryMode/StoryMode';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Switch>\n      <Route path='/About' component={About}/>\n      <Route path='/Contact' component={Contact}/>\n      <Route path='/Storymode' component={StoryMode}></Route>\n      <Route path='/:modelname' render={(routeProps)=>{return <Main routeProps={routeProps}/>}}/>\n      <Route path='/' component={Home} />\n      </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}